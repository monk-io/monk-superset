namespace: superset

superset-common:
  metadata:
    name: Superset
    description: |
      Apache Superset - Open Source Data Visualization and Business Intelligence Platform

      Apache Superset is a powerful open-source data visualization and business intelligence (BI) platform that empowers organizations to explore and analyze their data with ease. With its intuitive interface and robust features, Superset is the go-to solution for data professionals, analysts, and decision-makers seeking actionable insights from their data.
    tags: visualization, analytics, data organization, data modeling, dashboards
    website: https://superset.apache.org/
    publisher: monk.io
    icon: https://superset.apache.org/img/superset-logo-horiz.svg
    source: https://github.com/apache/superset
    private: true
  connections:
    database:
      runnable: superset/db
      service: postgres
    redis:
      runnable: superset/rds
      service: redis
  variables:
    monk-project-name:
      env: COMPOSE_PROJECT_NAME
      type: string
      value: <- $project_name default("Monk SuperSet")
    config_path:
      env: SUPERSET_CONFIG
      type: string
      value: superset_config
    python_path:
      env: PYTHONPATH
      type: string
      value: /app/config
    monk-db-dialect:
      env: DATABASE_DIALECT
      type: string
      value: postgresql
    monk-db-host:
      env: DATABASE_HOST
      type: string
      value: <- connection-hostname("database")
    monk-db-port:
      env: DATABASE_PORT
      type: int
      value: 5432
    db-password:
      env: DATABASE_PASSWORD
      value: <- $database_password default("monk")
      type: string
    db-user:
      env: DATABASE_USER
      value: <- $database_user default("monk")
      type: string
    db-name:
      env: DATABASE_DB
      value: <- $database_name default("monk")
      type: string
    crypress-config:
      env: CYPRESS_CONFIG
      type: bool
      value: false
    superset-examples:
      env: SUPERSET_LOAD_EXAMPLES
      type: bool
      value: true
    rds_host:
      env: REDIS_HOST
      type: string
      value: <- connection-hostname("redis")
    rds_port:
      env: REDIS_PORT
      type: int
      value: 6379
    superset-port:
      env: SUPERSET_PORT
      type: int
      value: 8088
  depends:
    wait-for:
      runnables:
        - superset/db
        - superset/rds
      timeout: 60

rds:
  defines: runnable
  metadata:
    name: Redis
    description: Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker.
    website: https://redis.io
    publisher: monk.io
    icon: https://cdn.icon-icons.com/icons2/2415/PNG/512/redis_original_wordmark_logo_icon_146369.png
    private: true
    version: 1.0
  variables:
    rds_disable_commands:
      env: REDIS_DISABLE_COMMANDS
      type: string
      value: <- $redis_disable_commands default("FLUSHDB,FLUSHALL,CONFIG")
    rds_empty_password:
      env: ALLOW_EMPTY_PASSWORD
      type: string
      value: <- $redis_empty_password default("yes")
    rds_io_thread:
      env: REDIS_IO_THREADS
      type: string
      value: <- $redis_io_threads default("1")
    rds_io_threads_do_reads:
      env: REDIS_IO_THREADS_DO_READS
      type: string
      value: <- $redis_io_threads_do_reads default("yes")
  containers:
    redis:
      image: bitnamilegacy/redis
      image-tag: <- $redis_image_tag default("latest")
      paths:
        - <- `${monk-volume-path}/superset/redis:/bitnami/redis/data`
  services:
    redis:
      container: redis
      port: 6379
      protocol: tcp

db:
  defines: runnable
  metadata:
    name: PostgreSQL
    website: https://www.postgresql.org
    source: https://github.com/postgres
    publisher: monk.io
    icon: https://www.postgresql.org/media/img/about/press/elephant.png
    tags: frameworks, object-relational, indexing, data types, query optimization, postgresql, security, open-source, mvcc, community
    description: |
      PostgreSQL is a powerful open-source object-relational database management system (DBMS) that provides robustness, reliability, and performance to meet the demanding needs of enterprise-level applications. It was first released in 1989 and has since become one of the most popular and widely used relational databases in the world.

      One of the key features of PostgreSQL is its flexibility, which allows it to be used in a wide range of applications, from small-scale projects to large, complex enterprise systems. It supports a wide range of data types, including arrays, hstore, and JSON, and provides advanced indexing and query optimization features to ensure fast and efficient data retrieval.

      PostgreSQL also has a strong reputation for data security and integrity, with support for advanced security features like row-level security, data masking, and encryption. It also supports multi-version concurrency control (MVCC), which allows multiple transactions to access and modify data concurrently without interfering with each other.

      In addition to its powerful features, PostgreSQL has a large and active community of developers and users who contribute to its development and provide support through forums, mailing lists, and other channels. It is available on multiple platforms, including Linux, Windows, and macOS, and can be used with a wide range of programming languages and frameworks, making it a versatile and reliable choice for database management in a wide range of applications.
    private: true
  variables:
    db-password:
      env: POSTGRES_PASSWORD
      value: <- $database_password default("monk")
      type: string
    db-user:
      env: POSTGRES_USER
      value: <- $database_user default("monk")
      type: string
    db-name:
      env: POSTGRES_DB
      value: <- $database_name default("monk")
      type: string
    db-trust:
      env: POSTGRES_HOST_AUTH_METHOD
      value: trust
  containers:
    postgres:
      image: postgres
      image-tag: <- $postgres_image_tag default("latest")
      paths:
      - <- `${monk-volume-path}/superset/postgres:/var/lib/postgresql/data`
  services:
    postgres:
      container: postgres
      port: 5432
      protocol: tcp

superset-init:
  defines: runnable
  inherits: superset/superset-common
  containers:
    superset:
      image: apache/superset
      user: 0
      bash: /app/files/init.sh
  files:
    init:
      container: superset
      mode: 0755
      path: /app/files/init.sh
      contents: <<< files/init.sh
    bootstrap:
      container: superset
      mode: 0755
      path: /app/files/bootstrap.sh
      contents: <<< files/bootstrap.sh
    config:
      container: superset
      mode: 0755
      path: /app/config/superset_config.py
      contents: <<< files/config.py
  depends:
    wait-for:
      runnables:
        - superset/rds
        - superset/db

superset:
  defines: runnable
  inherits: superset/superset-common
  containers:
    superset:
      image: apache/superset
      user: 0
      bash: /app/files/bootstrap.sh app
  files:
    bootstrap:
      container: superset
      mode: 0755
      path: /app/files/bootstrap.sh
      contents: <<< files/bootstrap.sh
    config:
      container: superset
      mode: 0755
      path: /app/config/superset_config.py
      contents: <<< files/config.py
  depends:
    wait-for:
      runnables:
        - superset/superset-init
  services:
    superset:
      container: superset
      port: 8088
      protocol: tcp
      host-port: 8088

superset-beat:
  defines: runnable
  inherits: superset/superset-common
  containers:
    superset:
      image: apache/superset
      user: 0
      bash: /app/files/bootstrap.sh beat
  files:
    bootstrap:
      container: superset
      mode: 0755
      path: /app/files/bootstrap.sh
      contents: <<< files/bootstrap.sh
    config:
      container: superset
      mode: 0755
      path: /app/config/superset_config.py
      contents: <<< files/config.py
  depends:
    wait-for:
      runnables:
        - superset/superset-init

superset-worker:
  defines: runnable
  inherits: superset/superset-common
  containers:
    superset:
      image: apache/superset
      user: 0
      bash: /app/files/bootstrap.sh worker
  files:
    bootstrap:
      container: superset
      mode: 0755
      path: /app/files/bootstrap.sh
      contents: <<< files/bootstrap.sh
    config:
      container: superset
      mode: 0755
      path: /app/config/superset_config.py
      contents: <<< files/config.py
  depends:
    wait-for:
      runnables:
        - superset/superset-init
