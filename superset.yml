namespace: superset

superset-common:
  metadata:
    defines: metadata
    name: Superset
    description: Apache Superset is a modern, enterprise-ready business intelligence web application.
    website: https://superset.apache.org/
    publisher: monk.io
    icon: https://superset.apache.org/img/superset-logo-horiz.svg
  connections:
    database:
      runnable: superset/db
      service: db-svc
    redis:
      runnable: superset/rds
      service: rds-svc
  variables:
    monk-project-name:
      env: COMPOSE_PROJECT_NAME
      type: string
      value: <- `${project_name}`
    config_path:
      env: SUPERSET_CONFIG
      type: string
      value: superset_config
    python_path:
      env: PYTHONPATH
      type: string
      value: /app/config
    monk-db-dialect:
      env: DATABASE_DIALECT
      type: string
      value: postgresql
    monk-db-host:
      env: DATABASE_HOST
      type: string
      value: <- connection-hostname("database") split(".dns.podman") join("")
    monk-db-port:
      env: DATABASE_PORT
      type: string
      value: <- `${database_port}`
    db-password:
      env: DATABASE_PASSWORD
      value: <- `${database_password}`
      type: string
    db-user:
      env: DATABASE_USER
      value: <- `${database_user}`
      type: string
    db-name:
      env: DATABASE_DB
      value: <- `${database_name}`
      type: string
    db-port:
      value: <- `${database_port}`
      type: int
    crypress-config:
      env: CYPRESS_CONFIG
      type: bool
      value: false
    superset-examples:
      env: SUPERSET_LOAD_EXAMPLES
      type: bool
      value: true
    rds_host: 
      env: REDIS_HOST
      type: string
      value: <- connection-hostname("redis") split(".dns.podman") join("")
    rds_port: 
      env: REDIS_PORT
      type: int
      value: 6379
    superset-port:
      env: SUPERSET_PORT
      type: int
      value: 8088
    volume_data:
      type: string
      value: <- `${monk-volume-path}/superset`

rds: 
  defines: runnable
  variables:
    image_tag:
      type: string
      value: <- `${redis_image_tag}`
    rds_port:
      type: int
      value: <- `${redis_port}`
    rds_disable_commands:
      env: REDIS_DISABLE_COMMANDS
      type: string
      value: <- `${redis_disable_commands}`
    rds_empty_password:
      env: ALLOW_EMPTY_PASSWORD
      type: string
      value: <- `${redis_empty_password}`
    rds_io_thread:
      env: REDIS_IO_THREADS
      type: string
      value: <- `${redis_io_thread}`
    rds_io_threads_do_reads:
      env: REDIS_IO_THREADS_DO_READS
      type: string
      value: <- `${redis_io_threads_do_reads}`
    volume_data:
      type: string
      value: <- `${monk-volume-path}/redis`
  containers:
    monk-rds:
      paths:
        - <- `${volume_data}/mysql:/bitnami/redis/data`
      ports:
        - <- `0.0.0.0:${rds_port}:6379`
      image: bitnami/redis
  version: 1.0
  services:
    rds-svc:
      container: monk-rds
      port: 6379
      protocol: tcp
      host-port: <- `${rds_port}`


db: 
  defines: runnable
  variables:
    defines: variables
    image-tag:
      type: string
      value: latest
    db-password:
      env: POSTGRES_PASSWORD
      value: <- `${database_password}`
      type: string
    db-user:
      env: POSTGRES_USER
      value: <- `${database_user}`
      type: string
    db-name:
      env: POSTGRES_DB
      value: <- `${database_name}`
      type: string
    db-port:
      value: <- `${database_port}`
      type: int
    db-trust:
      env: POSTGRES_HOST_AUTH_METHOD
      value: trust
  containers:
    defines: containers
    postgres:
      image-tag: <- `${image-tag}`
      # paths:
      # - <- `${moncc-volume-path}/db_data:/var/lib/postgresql/data`
      image: postgres
      ports:
      - <- `0.0.0.0:${db-port}:5432`
  services:
    db-svc:
      container: postgres
      port: 5432
      protocol: tcp
      host-port: <- `${db-port}`


superset-init:
  defines: runnable
  inherits: ./superset-common
  containers:
    superset:
      image: apache/superset
      user: 0
      bash: /app/files/init.sh
  files:
    init:
      container: superset
      mode: 0755
      path: /app/files/init.sh
      contents: <<< files/init.sh
    bootstrap:
      container: superset
      mode: 0755
      path: /app/files/bootstrap.sh
      contents: <<< files/bootstrap.sh
    config:
      container: superset
      mode: 0755
      path: /app/config/superset_config.py
      contents: <<< files/config.py
  depends:
    wait-for:
      runnables:
        - superset/rds
        - superset/db

superset:
  defines: runnable
  inherits: superset/superset-common
  containers:
    superset:
      image: apache/superset
      user: 0
      bash: /app/files/bootstrap.sh app
      ports:
        - <- `0.0.0.0:8088:8088`
  files:
    bootstrap:
      container: superset
      mode: 0755
      path: /app/files/bootstrap.sh
      contents: <<< files/bootstrap.sh
    config:
      container: superset
      mode: 0755
      path: /app/config/superset_config.py
      contents: <<< files/config.py
  depends:
    wait-for:
      runnables:
        - superset/superset-init

superset-beat:
  defines: runnable
  inherits: superset/superset-common
  containers:
    superset:
      image: apache/superset
      user: 0
      bash: /app/files/bootstrap.sh beat
  files:
    bootstrap:
      container: superset
      mode: 0755
      path: /app/files/bootstrap.sh
      contents: <<< files/bootstrap.sh
    config:
      container: superset
      mode: 0755
      path: /app/config/superset_config.py
      contents: <<< files/config.py
  depends:
    wait-for:
      runnables:
        - superset/superset-init

superset-worker:
  defines: runnable
  inherits: superset/superset-common
  containers:
    superset:
      image: apache/superset
      user: 0
      bash: /app/files/bootstrap.sh worker
  files:
    bootstrap:
      container: superset
      mode: 0755
      path: /app/files/bootstrap.sh
      contents: <<< files/bootstrap.sh
    config:
      container: superset
      mode: 0755
      path: /app/config/superset_config.py
      contents: <<< files/config.py
  depends:
    wait-for:
      runnables:
        - superset/superset-init